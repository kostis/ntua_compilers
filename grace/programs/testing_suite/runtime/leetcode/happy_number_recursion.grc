$$

A solution to https://leetcode.com/problems/happy-number/description

Write an algorithm to determine if a number n is happy.

A happy number is a number defined by the following process:

    Starting with any positive integer, replace the number by the sum of the squares of its digits.
    Repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1.
    Those numbers for which this process ends in 1 are happy.

Return true if n is a happy number, and false if not.

Example 1:

    Input: n = 19
    Output: true
    Explanation:
    12 + 92 = 82
    82 + 22 = 68
    62 + 82 = 100
    12 + 02 + 02 = 1

Example 2:

    Input: n = 2
    Output: false

This is a recursive solution

$$

fun main(): nothing
    var set: int[1000];
    var set_count, count: int;
    fun print_set(): nothing
        var i: int;
    { $ print_set
        writeString("Set: ");
        i <- 0;
        while i < set_count do 
        {
            writeInteger(set[i]);
            writeChar(' ');
            i <- i + 1;
        }
        writeChar('\n');
    } $ print_set

    fun insert(x: int): nothing
        fun exists(x: int): int
            var i: int;
        { $ exists
            while i < set_count do
            {
                if set[i] = x then
                    return 1;
                i <- i + 1;
            }   
            return 0;
        } $ exists
    
    { $ insert
        if exists(x) = 0 then
        {
            set[set_count] <- x;
            set_count <- set_count + 1;
        }
    } $ insert

    fun isHappy(n: int): int
        fun recursion(n: int): int
            var digit, sum: int;
        { $ recursion
            if n = 1 then
                return 1;
            insert(n);
            $ print_set();
            count <- count + 1;
            if set_count # count then
                return 0;
            sum <- 0;
            while n # 0 do 
            {
                digit <- n mod 10;
                sum <- sum + digit * digit;
                n <- n div 10;
            }
            return recursion(sum);
        } $ recursion
    { $ isHappy
        set_count <- 0;
        count <- 0;
        return recursion(n);
    } $ isHappy

    fun assert(n, expected_res: int): nothing
    { $ assert
        if isHappy(n) = expected_res then
            writeString("PASS\n");
        else 
            writeString("FAIL\n");
    } $ assert

{ $ main
    assert(19, 1);
    assert(2, 0);
    assert(89, 0);
    assert(112, 0);
    assert(1129, 0);
    assert(99999, 0);
} $ main

$$

Should only print PASS

$$