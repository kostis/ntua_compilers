def main

  def bsort: n as int, x as int []
    var changed is byte
    var i is int

    loop outer_loop_label:
      changed := false
      i := 0
      loop inner_loop_label:
        if i < n-1:
          if x[i] > x[i+1]:
            swap: x[i], x[i+1]
            changed := true
          i := i+1
        else:
          break : inner_loop_label
      if not changed:
        break : outer_loop_label

  def swap: x y as ref int
    var t is int
    t := x
    x := y
    y := t

  def writeArray: msg as byte [], n as int, x as int []
    var i is int

    writeString: msg
    i := 0
    loop:
      if i < n:
        if i > 0: writeString: ", "
        writeInteger: x[i]
        i := i+1
      else: break
    writeString: "\n"

  var seed i is int
  var x is int [16]

  seed := 65
  i := 0
  loop init_loop:
    if i < 16:
      seed := (seed * 137 + 220 + i) % 101
      x[i] := seed
      i := i+1
    else:
      break : init_loop
  writeArray: "Initial array: ", 16, x
  bsort: 16, x
  writeArray: "Sorted array: ", 16, x
